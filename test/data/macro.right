(_bootlocale.py:23): getpreferredencoding
-> 23         def getpreferredencoding(do_setlocale=True):
Set basename is off.
Set event is on.
Set stopping is off.
No macros defined.
Macro "foo" defined.
 18    	            # This path for legacy systems needs the more complex
 19    	            # getdefaultlocale() function, import the full locale module.
 20    	            import locale
 21    	            return locale.getpreferredencoding(do_setlocale)
 22    	    else:
 23  ->	        def getpreferredencoding(do_setlocale=True):
 24    	            assert not do_setlocale
 25    	            result = _locale.nl_langinfo(_locale.CODESET)
 26    	            if not result and sys.platform == 'darwin':
 27    	                # nl_langinfo can return an empty string
foo

Macro "bar" defined.
  1    	"""A minimal subset of the locale module used at interpreter startup
  2    	(imported by the _io module), in order to reduce startup time.
  3    	
  4    	Don't import directly from third-party code; use the `locale` module instead!
  5    	"""
  6    	
  7    	import sys
  8    	import _locale
  9    	
 10    	if sys.platform.startswith("win"):
    bar  foo

bar:
----
  lambda count: 'list %s' % count
foo:
----
  lambda: 'list'
trepan3k: That's all, folks...
